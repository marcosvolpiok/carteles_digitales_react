{"version":3,"sources":["logo.svg","Components/back/posters/Posters.js","Components/back/login/Login.js","Components/back/register/Register.js","Components/back/posters/postersAdd.js","Components/back/posters/postersEdit.js","Components/back/posters/PosterDelete.js","Components/back/posters/postersAddImage.js","Components/front/posterWatch/PosterWatch.js","App.js","reportWebVitals.js","index.js"],"names":["config","require","Posters","props","state","token","cookies","get","posters","fetch","api","method","headers","this","postersResponse","json","posterJson","setState","console","log","className","to","role","length","scope","map","poster","name","_id","React","Component","withCookies","Login","loginMessage","loginStatus","handleCookie","set","path","handleInputChange","bind","event","target","value","mode","body","JSON","stringify","email","user","password","pwd","responseLogin","loginJson","message","status","history","push","type","onChange","placeholder","onClick","handleClick","Register","registerMessage","registerStatus","pwdError","pwd2","class","PostersAdd","checked","init_time","end_time","response","responseJson","PostersEdit","id","match","params","image","filterBySize","file","size","defaultValue","PosterDelete","Object","keys","postersAddImage","file_path","src","alt","destination","url","sendWithFormData","fileFilter","accept","io","moment","PosterWatch","posterImage","socket","connectSocket","on","searchPosters","action","emit","changePhoto","setInterval","forEach","current","format","init","end","App","exact","component","PostersAddImage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,I,mFCKTA,EAASC,EAAQ,IAAR,WAGTC,E,kDAUF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IANVC,MAAQ,CACJC,MAAO,EAAKF,MAAMG,QAAQC,IAAI,UAAY,GAC1CC,QAAS,IAGM,E,kMAKeC,MAAM,GAAD,OAAIT,EAAOU,IAAX,gBACnC,CACIC,OAAQ,MACRC,QAAS,CAEP,cAAgB,UAAhB,OAA2BC,KAAKT,MAAMC,U,cALtCS,E,gBAQmBA,EAAgBC,O,OAAnCC,E,OACNH,KAAKI,SAAS,CAAET,QAASQ,IAEzBE,QAAQC,IAAI,e,qIAIZ,OACA,gCACI,cAAC,IAAD,CAAMC,UAAU,kBAAkBC,GAAG,eAAeC,KAAK,SAAzD,iBAECT,KAAKT,MAAMI,QAAQe,OAAS,GACzB,8BACI,wBAAOH,UAAU,QAAjB,UACA,gCACI,+BACI,oBAAII,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,0BAIR,gCACKX,KAAKT,MAAMI,QAAQiB,KAAI,SAACC,GAAD,OACpB,+BACI,6BAAKA,EAAOC,OACZ,+BACI,cAAC,IAAD,CAAMN,GAAE,wBAAmBK,EAAOE,KAAlC,kBADJ,KAEI,cAAC,IAAD,CAAMP,GAAE,yBAAoBK,EAAOE,KAAnC,oBAFJ,KAGI,cAAC,IAAD,CAAMP,GAAE,wBAAmBK,EAAOE,KAAlC,uBALCF,EAAOE,eAeD,IAA9Bf,KAAKT,MAAMI,QAAQe,QAChB,4D,GA9DMM,IAAMC,WAsEbC,cAAY7B,G,gBCvErBF,G,MAASC,EAAQ,IAAR,YAET+B,E,kDAWF,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IAPVC,MAAQ,CACJ6B,aAAc,GACdC,aAAa,EACb7B,MAAO,EAAKF,MAAMG,QAAQC,IAAI,UAAY,IAG3B,EAMnB4B,aAAe,SAAC9B,GACQ,EAAKF,MAAjBG,QACA8B,IAAI,QAAS/B,EAAO,CAAEgC,KAAM,OALpC,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAHV,E,8DAWDC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACff,EAAOc,EAAOd,KACpBd,KAAKI,SAAL,eACKU,EAAOe,M,sKAKgBjC,MAAM,GAAD,OAAIT,EAAOU,IAAX,gBAA8B,CAC3DC,OAAQ,OACRgC,KAAM,OACN/B,QAAS,CACP,eAAgB,oBAElBgC,KAAMC,KAAKC,UAAU,CACjBC,MAAOlC,KAAKT,MAAM4C,KAClBC,SAAUpC,KAAKT,MAAM8C,Q,cARvBC,E,gBAWkBA,EAAcpC,O,OAAhCqC,E,OAENvC,KAAKI,SAAS,CACVgB,aAAcmB,EAAUC,UAGF,MAAvBF,EAAcG,SACbzC,KAAKI,SAAS,CACViB,aAAa,IAGjBrB,KAAKsB,aAAaiB,EAAU/C,OAE5BQ,KAAKV,MAAMoD,QAAQC,KAAnB,c,qIAIE,IAAD,OACL,OACI,8BACI,gCACI,sDACA,gDAC6B,KAA5B3C,KAAKT,MAAM6B,cACZ,qBAAKb,UAAU,wBAAwBE,KAAK,QAA5C,SACI,4BAAIT,KAAKT,MAAM6B,iBAKnB,sBAAKb,UAAU,aAAf,UACI,qBAAKA,UAAU,aAAf,SACI,uBAAOqC,KAAK,OAAO9B,KAAK,OAAO+B,SAAU7C,KAAKyB,kBAAmBqB,YAAY,WAGjF,qBAAKvC,UAAU,aAAf,SACI,uBAAOqC,KAAK,WAAW9B,KAAK,MAAM+B,SAAU7C,KAAKyB,kBAAmBqB,YAAY,kBAGxF,wBAAQF,KAAK,SAASrC,UAAU,kBAAkBwC,QAAS,kBAAM,EAAKC,eAAtE,mBAEA,4BAAG,cAAC,IAAD,CAAMxC,GAAG,aAAT,iC,GApFHQ,IAAMC,WA2FTC,cAAYC,GC/FvBhC,EAASC,EAAQ,IAAR,WAqHE6D,E,kDA3Gb,WAAY3D,GAAQ,IAAD,8BACf,cAAMA,IAPVC,MAAQ,CACJ2D,gBAAiB,GACjBC,gBAAgB,EAChBC,UAAU,GAMV,EAAK3B,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAHV,E,8DAMDC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACff,EAAOc,EAAOd,KACpBd,KAAKI,SAAL,eACKU,EAAOe,M,yJAKZ7B,KAAKI,SAAS,CACVgD,UAAU,IAGXpD,KAAKT,MAAM6C,WAAWpC,KAAKT,MAAM8D,K,gBAChCrD,KAAKI,SAAS,CACVgD,UAAU,I,uCAGcxD,MAAM,GAAD,OAAIT,EAAOU,IAAX,iBAA+B,CAC5DC,OAAQ,OACRgC,KAAM,OACN/B,QAAS,CACT,eAAgB,oBAEhBgC,KAAMC,KAAKC,UAAU,CACjBnB,KAAMd,KAAKT,MAAMuB,KACjBoB,MAAOlC,KAAKT,MAAM2C,MAClBE,SAAUpC,KAAKT,MAAM6C,a,cATvBE,E,iBAYkBA,EAAcpC,O,QAAhCqC,E,OAEoB,MAAvBD,EAAcG,QAAuC,MAAvBH,EAAcG,OAC3CzC,KAAKI,SAAS,CACV+C,gBAAgB,IAGpBnD,KAAKI,SAAS,CACV8C,gBAAiBX,EAAUC,U,sIAQjC,IAAD,OACL,OACI,gCACoC,KAA/BxC,KAAKT,MAAM2D,iBACR,qBAAK3C,UAAU,wBAAwBE,KAAK,QAA5C,SACI,4BAAIT,KAAKT,MAAM2D,qBAIQ,IAA9BlD,KAAKT,MAAM4D,gBACR,gCACI,sBAAK5C,UAAU,aAAf,UACI,qBAAKA,UAAU,aAAf,SACI,uBAAOqC,KAAK,OAAO9B,KAAK,OAAO+B,SAAU7C,KAAKyB,kBAAmBqB,YAAY,WAGjF,qBAAKvC,UAAU,aAAf,SACI,uBAAOqC,KAAK,OAAO9B,KAAK,QAAQ+B,SAAU7C,KAAKyB,kBAAmBqB,YAAY,aAGlF,qBAAKvC,UAAU,aAAf,UAC6B,IAAxBP,KAAKT,MAAM6D,UACZ,sBAAKE,MAAM,qBAAX,UACI,4CADJ,mCAMJ,qBAAK/C,UAAU,aAAf,SACI,uBAAOqC,KAAK,WAAW9B,KAAK,WAAW+B,SAAU7C,KAAKyB,kBAAmBqB,YAAY,eAGzF,qBAAKvC,UAAU,aAAf,SACI,uBAAOqC,KAAK,WAAW9B,KAAK,OAAO+B,SAAU7C,KAAKyB,kBAAmBqB,YAAY,2BAKzF,wBAAQF,KAAK,SAASrC,UAAU,kBAAkBwC,QAAS,kBAAM,EAAKC,eAAtE,0BAKuB,IAA9BhD,KAAKT,MAAM4D,gBACR,gCACI,uDACA,6BAAI,cAAC,IAAD,CAAM3C,GAAG,UAAT,+B,GA3GLQ,IAAMC,WCHvB9B,EAASC,EAAQ,IAAR,WAGTmE,E,kDASF,WAAYjE,GAAQ,IAAD,8BACf,cAAMA,IALVC,MAAQ,CACJC,MAAO,EAAKF,MAAMG,QAAQC,IAAI,UAAY,IAM1C,EAAK+B,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAHV,E,8DAMDC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOgB,KAAsBhB,EAAO4B,QAAU5B,EAAOC,MAC7Df,EAAOc,EAAOd,KACpBd,KAAKI,SAAL,eACKU,EAAOe,M,6JAKZxB,QAAQC,IAAI,cAAeN,KAAKT,O,SACTK,MAAM,GAAD,OAAIT,EAAOU,IAAX,gBAA8B,CACtDC,OAAQ,OACRgC,KAAM,OACN/B,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BC,KAAKT,MAAMC,QAExCuC,KAAMC,KAAKC,UAAU,CACjBnB,KAAMd,KAAKT,MAAMuB,KACjB2C,UAAWzD,KAAKT,MAAMkE,UACtBC,SAAU1D,KAAKT,MAAMmE,a,cAVvBC,E,OAaNtD,QAAQC,IAAIqD,G,SACeA,EAASzD,O,OAA9B0D,E,OACN5D,KAAKV,MAAMoD,QAAQC,KAAnB,4BAA6CiB,EAAa7C,M,qIAIpD,IAAD,OACL,OACA,gCACI,4CACA,+BACI,qBAAKR,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,YAAb,SAAyB,uBAAOqC,KAAK,OAAOC,SAAU7C,KAAKyB,kBAAmBX,KAAK,OAAOgC,YAAY,WAEtG,oBAAGvC,UAAU,YAAb,mBAA+B,uBAAOqC,KAAK,OAAOC,SAAU7C,KAAKyB,kBAAmBX,KAAK,YAAYgC,YAAY,YACjH,oBAAGvC,UAAU,YAAb,kBAA8B,uBAAOqC,KAAK,OAAOC,SAAU7C,KAAKyB,kBAAmBX,KAAK,WAAWgC,YAAY,WAG/G,wBAAQF,KAAK,SAASrC,UAAU,kBAAkBwC,QAAS,kBAAM,EAAKC,eAAtE,gC,GA1DChC,IAAMC,WAoEhBC,cAAYqC,G,wBCnErBpE,EAASC,EAAQ,IAAR,WAGTyE,E,kDAcF,WAAYvE,GAAQ,IAAD,8BACf,cAAMA,IARVC,MAAQ,CACJC,MAAO,EAAKF,MAAMG,QAAQC,IAAI,UAAY,GAC1CmB,OAAQ,GACRiD,GAAI,EAAKxE,MAAMyE,MAAMC,OAAOF,GAC5BG,MAAO,MAGQ,EAwDnBC,aAAe,SAACC,GAEZ,OAAOA,EAAKC,MAAQ,SAvDpB,EAAK3C,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAHV,E,kMAUe9B,MAAM,GAAD,OAAIT,EAAOU,IAAX,mBAAyBG,KAAKT,MAAMuE,IAAM,CACzEhE,OAAQ,MACRgC,KAAM,OACN/B,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BC,KAAKT,MAAMC,U,cALtCS,E,gBAQmBA,EAAgBC,O,OAAnCC,E,OACNH,KAAKI,SAAS,CAAES,OAAQV,IAExBE,QAAQC,IAAIH,G,8IAKEwB,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOgB,KAAsBhB,EAAO4B,QAAU5B,EAAOC,MAC7Df,EAAOc,EAAOd,KACpBd,KAAKI,SAAL,eACKU,EAAOe,M,2JAKZxB,QAAQC,IAAI,cAAeN,KAAKT,O,SACTK,MAAM,GAAD,OAAIT,EAAOU,IAAX,0BAAgCG,KAAKT,MAAMuE,IAAM,CACzEhE,OAAQ,OACRgC,KAAM,OACN/B,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BC,KAAKT,MAAMC,QAExCuC,KAAMC,KAAKC,UAAU,CACjBnB,KAAMd,KAAKT,MAAMuB,KACjB2C,UAAWzD,KAAKT,MAAMkE,UACtBC,SAAU1D,KAAKT,MAAMmE,a,OAVvBC,E,OAcNtD,QAAQC,IAAIqD,GAEZ3D,KAAKV,MAAMoD,QAAQC,KAAnB,4BAA6C3C,KAAKT,MAAMuE,K,qIAYlD,IAAD,OACCjD,EAASb,KAAKT,MAAMsB,OAE1B,OACA,gCACKA,EAAOE,KACJ,+BACI,qBAAKR,UAAU,OAAf,SACA,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,YAAb,SAAyB,uBAAOqC,KAAK,OAAOyB,aAAcxD,EAAOC,KAAM+B,SAAU7C,KAAKyB,kBAAmBX,KAAK,OAAOgC,YAAY,WAEjI,oBAAGvC,UAAU,YAAb,mBAA+B,uBAAOqC,KAAK,OAAOC,SAAU7C,KAAKyB,kBAAmBX,KAAK,YAAYuD,aAAcxD,EAAO4C,eAC1H,oBAAGlD,UAAU,YAAb,kBAA8B,uBAAOqC,KAAK,OAAOC,SAAU7C,KAAKyB,kBAAmBX,KAAK,WAAWuD,aAAcxD,EAAO6C,cAExH,wBAAQd,KAAK,SAASrC,UAAU,kBAAkBwC,QAAS,kBAAM,EAAKC,eAAtE,sBAPuBnC,EAAOE,QAexCF,EAAOE,KACL,4D,GAtGUC,IAAMC,WA6GjBC,cAAY2C,GCpHrB1E,EAASC,EAAQ,IAAR,WAsDEkF,E,4MAnDb/E,MAAQ,CACJsB,OAAQ,GACRiD,GAAI,EAAKxE,MAAMyE,MAAMC,OAAOF,I,oMAIElE,MAAM,GAAD,OAAIT,EAAOU,IAAX,mBAAyBG,KAAKT,MAAMuE,IAAM,CACzEhE,OAAQ,MACRgC,KAAM,OACN/B,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BC,KAAKT,MAAMC,U,cALtCS,E,gBAQmBA,EAAgBC,O,OAAnCC,E,OACNH,KAAKI,SAAS,CAAES,OAAQV,I,iQAIxBE,QAAQC,IAAI,cAAeN,KAAKT,O,SACTK,MAAM,GAAD,OAAIT,EAAOU,IAAX,0BAAgCG,KAAKT,MAAMuE,IAAM,CACzEhE,OAAQ,SACRgC,KAAM,OACN/B,QAAS,CACP,eAAgB,sB,OAJhB4D,E,OAONtD,QAAQC,IAAIqD,GACZ3D,KAAKV,MAAMoD,QAAQC,KAAK,a,qIAGhB,IAAD,OACP,OACI,8BACI,+BACK4B,OAAOC,KAAKxE,KAAKT,MAAMsB,QAAQH,QAC5B,qBAAKH,UAAU,OAAf,SACA,sBAAKA,UAAU,YAAf,UACI,6BAAKP,KAAKT,MAAMsB,OAAOC,OACvB,mEACA,wBAAQ8B,KAAK,SAASrC,UAAU,iBAAiBwC,QAAS,kBAAM,EAAKC,eAArE,wBAJuBhD,KAAKT,MAAMsB,OAAOE,a,GArC1CC,IAAMC,WCE3B9B,EAASC,EAAQ,IAAR,WAGTqF,E,kDAYF,WAAYnF,GAAQ,IAAD,8BACf,cAAMA,IARVC,MAAQ,CACJC,MAAO,EAAKF,MAAMG,QAAQC,IAAI,UAAY,GAC1CuE,MAAO,KACPpD,OAAQ,GACRiD,GAAI,EAAKxE,MAAMyE,MAAMC,OAAOF,IAGb,EA8CnBI,aAAe,SAACC,GAEZ,OAAOA,EAAKC,MAAQ,SA7CpB,EAAK3C,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAHV,E,8DAMDC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOgB,KAAsBhB,EAAO4B,QAAU5B,EAAOC,MAC7Df,EAAOc,EAAOd,KACpBd,KAAKI,SAAL,eACKU,EAAOe,M,2JAKZxB,QAAQC,IAAI,cAAeN,KAAKT,O,SACTK,MAAM,GAAD,OAAIT,EAAOU,IAAX,qBAAmC,CAC3DC,OAAQ,OACRgC,KAAM,OACN/B,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BC,KAAKT,MAAMC,QAExCuC,KAAMC,KAAKC,UAAU,CACjBnB,KAAMd,KAAKT,MAAMuB,S,OARnB6C,E,OAWNtD,QAAQC,IAAIqD,GACZ3D,KAAKV,MAAMoD,QAAQC,KAAK,a,kRAIM/C,MAAM,GAAD,OAAIT,EAAOU,IAAX,mBAAyBG,KAAKT,MAAMuE,IAAM,CACzEhE,OAAQ,MACRgC,KAAM,OACN/B,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BC,KAAKT,MAAMC,U,cALtCS,E,gBAQmBA,EAAgBC,O,OAAnCC,E,OACNE,QAAQC,IAAIH,GACZH,KAAKI,SAAS,CAAES,OAAQV,I,qIASxB,OACA,gCACI,2CACA,+BACI,qBAAKI,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACKP,KAAKT,MAAMsB,OAAO6D,WACf,gCACI,iDACA,qBAAKC,IAAG,UAAK3E,KAAKT,MAAMsB,OAAO6D,WAC/BE,IAAI,sBAIZ,8CACA,eAAC,IAAD,CACIC,YAAa,CACT9E,QAAS,CAAC,cAAgB,UAAhB,OAA2BC,KAAKT,MAAMC,QAChDsF,IAAI,GAAD,OAAK3F,EAAOU,IAAZ,oBACHkF,kBAAkB,EAClBf,OAAQ,CACJF,GAAI9D,KAAKT,MAAMuE,KAGvBkB,WAAYhF,KAAKkE,aACjBe,OAAO,UAVX,UAWI,cAAC,IAAD,IACA,cAAC,IAAD,qB,GA3FEjE,IAAMC,WAsGrBC,cAAYuD,GC/GrBS,EAAK9F,EAAQ,IACb+F,EAAS/F,EAAQ,KAIjBD,EAASC,EAAQ,IAAR,WAyFEgG,E,kDAtFb,WAAY9F,GAAQ,IAAD,8BACf,cAAMA,IAUVC,MAAQ,CACJuE,GAAI,EAAKxE,MAAMyE,MAAMC,OAAOF,GAC5BuB,YAAa,MAVb,EAAKC,OAAQJ,EAAG,GAAD,OAAI/F,EAAOU,KAAO,IAIjC,EAAK0F,gBAPU,E,4DAkBfvF,KAAKsF,OAAOE,GAAG,SAAU,WACrBnF,QAAQC,IAAI,uBACZN,KAAKyF,iBACP/D,KAAK1B,S,kCAGC0F,GACRrF,QAAQC,IAAI,uBAAwB,UACpCN,KAAKsF,OAAOK,KAAK,SAAU,W,oJAI3B3F,KAAKyF,gB,qRAIyB7F,MAAM,GAAD,OAAIT,EAAOU,IAAX,gCAAsCG,KAAKT,MAAMuE,IAAM,CACtFhE,OAAQ,MACRgC,KAAM,OACN/B,QAAS,CACP,eAAgB,sB,cAJhBE,E,gBAQmBA,EAAgBC,O,OAAnCC,E,OACNH,KAAKI,SAAS,CAAES,OAAQV,IAExBE,QAAQC,IAAI,uBAAwBH,GACpCH,KAAK4F,YAAYzF,GAEjB0F,aAAY,WACR,EAAKD,YAAazF,KACnB,K,yIAIMA,GAAa,IAAD,OACrBE,QAAQC,IAAI,0BACZH,EAAW2F,SAAQ,SAAAjF,GAEf,IAAMkF,EAAUZ,EAAO,cAAcA,IAASa,OAAO,MAAM,IAAIb,IAASa,OAAO,MAAM,IAAIb,IAASa,OAAO,OAAOA,OAAO,uBAEjHC,EAAOd,EAAO,cAAgBtE,EAAO4C,WAAWuC,OAAO,uBACvDE,EAAMf,EAAO,cAAgBtE,EAAO6C,UAAUsC,OAAO,uBAE3D3F,QAAQC,IAAI,mDAAoDO,EAAO4C,WACpEwC,GAAQF,GAAWA,GAASG,IAC3B7F,QAAQC,IAAI,qCAAsCO,EAAOC,MACzDT,QAAQC,IAAI2F,EAAMC,EAAKH,GACvB,EAAK3F,SAAS,CAAEiF,YAAaxE,EAAO6D,aAExCrE,QAAQC,IAAI2F,EAAMC,EAAKH,Q,+BAM3B,OACI,8BAII,qBAAKpB,IAAK,UAAGxF,EAAOU,IAAV,KAAiBG,KAAKT,MAAM8F,oB,GAjF5BrE,IAAMC,WCmDjBkF,MA/Cf,WACE,OACE,8BACE,cAAC,IAAD,UACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAAC5E,KAAK,WAAW6E,UAAWhH,IACxC,cAAC,IAAD,CAAO+G,OAAK,EAAC5E,KAAK,SAAS6E,UAAWlF,IACtC,cAAC,IAAD,CAAOiF,OAAK,EAAC5E,KAAK,YAAY6E,UAAWpD,IACzC,cAAC,IAAD,CAAOmD,OAAK,EAAC5E,KAAK,eAAe6E,UAAW9C,IAC5C,cAAC,IAAD,CAAO6C,OAAK,EAAC5E,KAAK,wBAAwB6E,UAAWC,IACrD,cAAC,IAAD,CAAOF,OAAK,EAAC5E,KAAK,oBAAoB6E,UAAWxC,IACjD,cAAC,IAAD,CAAOuC,OAAK,EAAC5E,KAAK,qBAAqB6E,UAAW/B,IAGlD,cAAC,IAAD,CAAO8B,OAAK,EAAC5E,KAAK,oBAAoB6E,UAAWjB,YChB5CmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8e1cfc4c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nconst env = process.env.NODE_ENV || 'production';\r\nconst config = require('../../../config/config.json')[env];\r\n\r\n\r\nclass Posters extends React.Component {\r\n    static propTypes = {\r\n        cookies: instanceOf(Cookies).isRequired\r\n    };\r\n\r\n    state = {\r\n        token: this.props.cookies.get(\"token\") || \"\",\r\n        posters: []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const postersResponse = await fetch(`${config.api}/poster/list`,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n              //'access-token': this.state.token\r\n              'Authorization': `Bearer ${this.state.token}`\r\n            }\r\n        });\r\n        const posterJson = await postersResponse.json();\r\n        this.setState({ posters: posterJson }); \r\n\r\n        console.log('poseterssss');\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n        <div>\r\n            <Link className=\"btn btn-primary\" to=\"/posters/add\" role=\"button\">Add</Link>\r\n\r\n            {this.state.posters.length > 0 &&\r\n                <div>\r\n                    <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {this.state.posters.map((poster) => (\r\n                            <tr key={poster._id}>\r\n                                <td>{poster.name}</td>\r\n                                <td>\r\n                                    <Link to={`/posters/edit/${poster._id}`}>Edit</Link> - \r\n                                    <Link to={`/poster/delete/${poster._id}`}>Delete</Link> - \r\n                                    <Link to={`/poster/watch/${poster._id}`}>Link</Link> \r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n            }\r\n\r\n            {this.state.posters.length === 0 &&\r\n                <h2>No such any poster.</h2>\r\n            }\r\n        </div>\r\n        )\r\n        \r\n      }\r\n\r\n  }\r\nexport default withCookies(Posters);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nconst env = process.env.NODE_ENV || 'production';\r\nconst config = require('../../../config/config.json')[env];\r\n\r\nclass Login extends React.Component {\r\n    static propTypes = {\r\n        cookies: instanceOf(Cookies).isRequired\r\n    };\r\n\r\n    state = {\r\n        loginMessage: '',\r\n        loginStatus: false,\r\n        token: this.props.cookies.get(\"token\") || \"\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleCookie = (token) => {\r\n        const { cookies } = this.props;\r\n        cookies.set(\"token\", token, { path: \"/\" });\r\n    };\r\n   \r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async handleClick () {\r\n        const responseLogin = await fetch(`${config.api}/user/login/`, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.user,\r\n                password: this.state.pwd\r\n            }) \r\n        });\r\n        const loginJson = await responseLogin.json();\r\n \r\n        this.setState({\r\n            loginMessage: loginJson.message\r\n        });\r\n\r\n        if(responseLogin.status===200){\r\n            this.setState({\r\n                loginStatus: true\r\n            });\r\n\r\n            this.handleCookie(loginJson.token);\r\n\r\n            this.props.history.push(`/posters/`);\r\n        }\r\n    }\r\n\r\n    render() {    \r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h2>User: 1234@gmail.com</h2>\r\n                    <h2>Password: 1234</h2>\r\n                    {this.state.loginMessage !== '' &&\r\n                    <div className=\"alert alert-secondary\" role=\"alert\">\r\n                        <p>{this.state.loginMessage}</p>\r\n                    </div>\r\n                        \r\n                    }\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"user\" onChange={this.handleInputChange} placeholder=\"User\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" name=\"pwd\" onChange={this.handleInputChange} placeholder=\"Password\" />\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleClick()}>Login</button>\r\n\r\n                    <p><Link to=\"/register/\">Register</Link></p>\r\n                </div>\r\n            </div>\r\n        )\r\n      }\r\n\r\n  }\r\n  export default withCookies(Login);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nconst env = process.env.NODE_ENV || 'production';\r\nconst config = require('../../../config/config.json')[env];\r\n\r\nclass Register extends React.Component {\r\n\r\n    state = {\r\n        registerMessage: '',\r\n        registerStatus: false,\r\n        pwdError: false\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n   \r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async handleClick () {\r\n        this.setState({\r\n            pwdError: false\r\n        });\r\n\r\n        if(this.state.password!==this.state.pwd2){\r\n            this.setState({\r\n                pwdError: true\r\n            });\r\n        }else{\r\n            const responseLogin = await fetch(`${config.api}/user/signup/`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                }) \r\n            });\r\n            const loginJson = await responseLogin.json();\r\n\r\n            if(responseLogin.status===200 || responseLogin.status===201){\r\n                this.setState({\r\n                    registerStatus: true\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    registerMessage: loginJson.message\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n   \r\n    \r\n    render() {    \r\n        return (\r\n            <div>\r\n                {this.state.registerMessage !== '' &&\r\n                    <div className=\"alert alert-secondary\" role=\"alert\">\r\n                        <p>{this.state.registerMessage}</p>\r\n                    </div> \r\n                }\r\n\r\n                {this.state.registerStatus === false &&\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" name=\"name\" onChange={this.handleInputChange} placeholder=\"Name\" />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" name=\"email\" onChange={this.handleInputChange} placeholder=\"E-mail\" />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {this.state.pwdError === true &&\r\n                                <div class=\"alert alert-danger\">\r\n                                    <strong>Error!</strong> Passwords aren't are equal\r\n                                </div>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"password\" onChange={this.handleInputChange} placeholder=\"Password\" />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"pwd2\" onChange={this.handleInputChange} placeholder=\"Re-entry password\" />\r\n                            </div>\r\n\r\n                            \r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleClick()}>Register</button>\r\n                    </div>\r\n                }\r\n\r\n\r\n                {this.state.registerStatus === true &&\r\n                    <div>\r\n                        <h3>Registered successful</h3>\r\n                        <h3><Link to=\"/login/\">Login</Link></h3>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n      }\r\n\r\n  }\r\n  export default Register;","import React from 'react';\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nconst env = process.env.NODE_ENV || 'production';\r\nconst config = require('../../../config/config.json')[env];\r\n\r\n\r\nclass PostersAdd extends React.Component {\r\n    static propTypes = {\r\n        cookies: instanceOf(Cookies).isRequired\r\n    };\r\n\r\n    state = {\r\n        token: this.props.cookies.get(\"token\") || \"\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async handleClick () {\r\n        console.log('Submit!... ', this.state);\r\n        const response = await fetch(`${config.api}/poster/add/`, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${this.state.token}`\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                init_time: this.state.init_time,\r\n                end_time: this.state.end_time,\r\n            }) \r\n        });\r\n        console.log(response);\r\n        const responseJson = await response.json();\r\n        this.props.history.push(`/posters/addImage/${responseJson._id}`); //Redirect\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <h1>Add poster</h1>\r\n            <form>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\"><input type=\"text\" onChange={this.handleInputChange} name=\"name\" placeholder=\"Name\" /></p>\r\n                        \r\n                        <p className=\"card-text\">Init: <input type=\"time\" onChange={this.handleInputChange} name=\"init_time\" placeholder=\"Init\" /></p>\r\n                        <p className=\"card-text\">End: <input type=\"time\" onChange={this.handleInputChange} name=\"end_time\" placeholder=\"End\" /></p>\r\n                        \r\n\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleClick()}>Next</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n        \r\n      }\r\n\r\n  }\r\nexport default withCookies(PostersAdd);","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport Uploady from \"@rpldy/uploady\";\r\nimport UploadButton from \"@rpldy/upload-button\";\r\nimport UploadPreview from \"@rpldy/upload-preview\";\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nconst env = process.env.NODE_ENV || 'production';\r\nconst config = require('../../../config/config.json')[env];\r\n\r\n\r\nclass PostersEdit extends React.Component {\r\n    \r\n    static propTypes = {\r\n        cookies: instanceOf(Cookies).isRequired\r\n    };\r\n    \r\n\r\n    state = {\r\n        token: this.props.cookies.get(\"token\") || \"\",\r\n        poster: {},\r\n        id: this.props.match.params.id,\r\n        image: null\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        const postersResponse = await fetch(`${config.api}/poster/${this.state.id}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${this.state.token}`\r\n            }\r\n        });\r\n        const posterJson = await postersResponse.json();\r\n        this.setState({ poster: posterJson }); \r\n\r\n        console.log(posterJson);\r\n    }\r\n\r\n\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async handleClick () {\r\n        console.log('Submit!... ', this.state);\r\n        const response = await fetch(`${config.api}/poster/update/${this.state.id}`, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${this.state.token}`\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                init_time: this.state.init_time,\r\n                end_time: this.state.end_time,\r\n                \r\n            }) \r\n        });\r\n        console.log(response);\r\n        //this.props.history.push('/posters/'); //Redirect\r\n        this.props.history.push(`/posters/addImage/${this.state.id}`); //Redirect\r\n    }\r\n\r\n    filterBySize = (file) => {\r\n        //filter out images larger than 5MB\r\n        return file.size <= 5242880;\r\n    };\r\n\r\n    \r\n\r\n\r\n    \r\n    render() {\r\n        const poster = this.state.poster;\r\n\r\n        return (\r\n        <div>\r\n            {poster._id  &&\r\n                <form>\r\n                    <div className=\"card\" key={poster._id}>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\"><input type=\"text\" defaultValue={poster.name} onChange={this.handleInputChange} name=\"name\" placeholder=\"Name\" /></p>\r\n\r\n                        <p className=\"card-text\">Init: <input type=\"time\" onChange={this.handleInputChange} name=\"init_time\" defaultValue={poster.init_time} /></p>\r\n                        <p className=\"card-text\">End: <input type=\"time\" onChange={this.handleInputChange} name=\"end_time\" defaultValue={poster.end_time} /></p>\r\n\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleClick()}>Next</button>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n           \r\n            }\r\n\r\n            \r\n            {!poster._id &&\r\n                <h2>No such any poster.</h2>\r\n            }\r\n        </div>\r\n        )\r\n        \r\n      }\r\n  }\r\nexport default withCookies(PostersEdit);","import React from 'react'\r\nimport { Router, Route, Link, browserHistory, IndexRoute } from 'react-router'\r\nimport {Redirect} from 'react-router-dom';\r\nconst env = process.env.NODE_ENV || 'production';\r\nconst config = require('../../../config/config.json')[env];\r\n\r\nclass PosterDelete extends React.Component {\r\n    state = {\r\n        poster: [],\r\n        id: this.props.match.params.id,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const postersResponse = await fetch(`${config.api}/poster/${this.state.id}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${this.state.token}`\r\n            }\r\n        });\r\n        const posterJson = await postersResponse.json();\r\n        this.setState({ poster: posterJson }); \r\n    }\r\n  \r\n    async handleClick () {\r\n        console.log('Submit!... ', this.state);\r\n        const response = await fetch(`${config.api}/poster/remove/${this.state.id}`, {\r\n            method: 'DELETE',\r\n            mode: 'cors',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        console.log(response);\r\n        this.props.history.push('/posters/'); //Redirect\r\n    }\r\n\r\n      render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    {Object.keys(this.state.poster).length &&\r\n                        <div className=\"card\" key={this.state.poster._id}>\r\n                        <div className=\"card-body\">\r\n                            <h1>{this.state.poster.name}</h1>\r\n                            <p>Do you want to delete this poster?</p>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleClick()}>Delete</button>\r\n                        </div>\r\n                        </div>\r\n                    }\r\n                </form>\r\n          </div>\r\n        )\r\n        \r\n      }\r\n\r\n  }\r\n  export default PosterDelete;","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport Uploady from \"@rpldy/uploady\";\r\nimport UploadButton from \"@rpldy/upload-button\";\r\nimport UploadPreview from \"@rpldy/upload-preview\";\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nconst env = process.env.NODE_ENV || 'production';\r\nconst config = require('../../../config/config.json')[env];\r\n\r\n\r\nclass postersAddImage extends React.Component {\r\n    static propTypes = {\r\n        cookies: instanceOf(Cookies).isRequired\r\n    };\r\n\r\n    state = {\r\n        token: this.props.cookies.get(\"token\") || \"\",\r\n        image: null,\r\n        poster: {},\r\n        id: this.props.match.params.id\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async handleClick () {\r\n        console.log('Submit!... ', this.state);\r\n        const response = await fetch(`${config.api}/poster/addImage/`, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${this.state.token}`\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name\r\n            }) \r\n        });\r\n        console.log(response);\r\n        this.props.history.push('/posters/'); //Redirect\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const postersResponse = await fetch(`${config.api}/poster/${this.state.id}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${this.state.token}`\r\n            }\r\n        });\r\n        const posterJson = await postersResponse.json();\r\n        console.log(posterJson);\r\n        this.setState({ poster: posterJson }); \r\n    }\r\n\r\n    filterBySize = (file) => {\r\n        //filter out images larger than 5MB\r\n        return file.size <= 5242880;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <h1>Add image</h1>\r\n            <form>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        {this.state.poster.file_path &&\r\n                            <div>\r\n                                <p>Original imagen:</p>\r\n                                <img src={`${this.state.poster.file_path}`}\r\n                                alt=\"Original image\" />\r\n                            </div>\r\n                        }\r\n\r\n                        <h3>Change image</h3>\r\n                        <Uploady\r\n                            destination={{\r\n                                headers: {\"Authorization\": `Bearer ${this.state.token}`},\r\n                                url: `${config.api}/poster/addImage`,\r\n                                sendWithFormData: true,\r\n                                params: {\r\n                                    id: this.state.id\r\n                                }\r\n                            }}\r\n                            fileFilter={this.filterBySize}\r\n                            accept=\"image/*\">\r\n                            <UploadButton />\r\n                            <UploadPreview />   \r\n                        </Uploady>                        \r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n        \r\n      }\r\n\r\n  }\r\nexport default withCookies(postersAddImage);","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nconst io = require('socket.io-client');\r\nconst moment = require('moment');\r\n\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nconst env = process.env.NODE_ENV || 'production';\r\nconst config = require('../../../config/config.json')[env];\r\n\r\nclass PosterWatch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //this.socket = io();\r\n        this.socket =io(`${config.api}`, {\r\n           // reconnectionDelayMax: 1,\r\n            \r\n        });\r\n        this.connectSocket();\r\n    }\r\n\r\n    \r\n    state = {\r\n        id: this.props.match.params.id,\r\n        posterImage: null\r\n    };\r\n\r\n\r\n    connectSocket(){\r\n        this.socket.on('action', function(){\r\n            console.log('llegó msg action');\r\n            this.searchPosters();\r\n        }.bind(this));\r\n    }\r\n\r\n    handleClick(action) {\r\n        console.log('cambiando accion... ', 'xxxxxx');\r\n        this.socket.emit('action', 'xxxxx'); \r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.searchPosters();\r\n    }\r\n\r\n    async searchPosters(){\r\n        const postersResponse = await fetch(`${config.api}/poster/listByUserId/${this.state.id}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              //'Authorization': `Bearer ${this.state.token}`\r\n            }\r\n        });\r\n        const posterJson = await postersResponse.json();\r\n        this.setState({ poster: posterJson }); \r\n\r\n        console.log('llego posterrrrrrrrr', posterJson);\r\n        this.changePhoto(posterJson);\r\n\r\n        setInterval(() => {\r\n            this.changePhoto (posterJson)\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    changePhoto (posterJson) {\r\n        console.log('checkea cambio de foto');\r\n        posterJson.forEach(poster => {\r\n\r\n            const current = moment('2000-01-01 '+moment().format('HH')+':'+moment().format('MM')+':'+moment().format('ss')).format('YYYY-MM-DD HH:MM:ss');\r\n            //const current = moment().format('YYYY-MM-DD hh:MM:ss');\r\n            const init = moment('2000-01-01 ' + poster.init_time).format('YYYY-MM-DD HH:MM:ss');\r\n            const end = moment('2000-01-01 ' + poster.end_time).format('YYYY-MM-DD HH:MM:ss');\r\n\r\n            console.log('poster.init_timeposter.init_timeposter.init_time', poster.init_time);\r\n            if(init <= current && current<=end){\r\n                console.log('************* MUESTRAAAAAAAAAAAAA ', poster.name);\r\n                console.log(init, end, current);\r\n                this.setState({ posterImage: poster.file_path }); \r\n            }\r\n            console.log(init, end, current);\r\n            \r\n        });\r\n    }\r\n\r\n    render() {    \r\n        return (\r\n            <div>\r\n                {/*\r\n                <button id=\"action\" type=\"button\" onClick={() => this.handleClick('xxxx')}>mandar algo</button>\r\n                */}\r\n                <img src={`${config.api}/`+this.state.posterImage} />\r\n            </div>\r\n        )\r\n      }\r\n\r\n  }\r\n  export default PosterWatch;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { HashRouter as Router, Route, Link, Switch, Redirect, useLocation  } from 'react-router-dom';\r\nimport Posters from './Components/back/posters/Posters';\r\nimport Login from './Components/back/login/Login';\r\nimport Register from './Components/back/register/Register';\r\nimport PostersAdd from './Components/back/posters/postersAdd';\r\nimport PostersEdit from './Components/back/posters/postersEdit';\r\nimport PosterDelete from './Components/back/posters/PosterDelete';\r\nimport PostersAddImage from './Components/back/posters/postersAddImage';\r\nimport PosterWatch from './Components/front/posterWatch/PosterWatch';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          {/*<Route exact path='/Action/delete/:id' component={ActionsDelete} />*/}\r\n          <Route exact path='/posters' component={Posters} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='/register' component={Register} />\r\n          <Route exact path='/posters/add' component={PostersAdd} />\r\n          <Route exact path='/posters/addImage/:id' component={PostersAddImage} />\r\n          <Route exact path='/posters/edit/:id' component={PostersEdit} />\r\n          <Route exact path='/poster/delete/:id' component={PosterDelete} />\r\n\r\n          {/* POSTER FRONTEND */}\r\n          <Route exact path='/poster/watch/:id' component={PosterWatch} />\r\n                 \r\n        </Switch>\r\n    </Router>\r\n    </div> \r\n  )\r\n}\r\n\r\n/*\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n*/\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}